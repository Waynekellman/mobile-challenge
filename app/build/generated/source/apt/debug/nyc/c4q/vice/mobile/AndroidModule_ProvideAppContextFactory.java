// Generated by Dagger (https://google.github.io/dagger).
package nyc.c4q.vice.mobile;

import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AndroidModule_ProvideAppContextFactory implements Factory<Context> {
  private final AndroidModule module;

  public AndroidModule_ProvideAppContextFactory(AndroidModule module) {
    this.module = module;
  }

  @Override
  public Context get() {
    return provideInstance(module);
  }

  public static Context provideInstance(AndroidModule module) {
    return proxyProvideAppContext(module);
  }

  public static AndroidModule_ProvideAppContextFactory create(AndroidModule module) {
    return new AndroidModule_ProvideAppContextFactory(module);
  }

  public static Context proxyProvideAppContext(AndroidModule instance) {
    return Preconditions.checkNotNull(
        instance.provideAppContext(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
