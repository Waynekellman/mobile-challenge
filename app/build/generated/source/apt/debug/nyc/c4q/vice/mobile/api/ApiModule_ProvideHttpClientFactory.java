// Generated by Dagger (https://google.github.io/dagger).
package nyc.c4q.vice.mobile.api;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

public final class ApiModule_ProvideHttpClientFactory implements Factory<OkHttpClient> {
  private final ApiModule module;

  public ApiModule_ProvideHttpClientFactory(ApiModule module) {
    this.module = module;
  }

  @Override
  public OkHttpClient get() {
    return provideInstance(module);
  }

  public static OkHttpClient provideInstance(ApiModule module) {
    return proxyProvideHttpClient(module);
  }

  public static ApiModule_ProvideHttpClientFactory create(ApiModule module) {
    return new ApiModule_ProvideHttpClientFactory(module);
  }

  public static OkHttpClient proxyProvideHttpClient(ApiModule instance) {
    return Preconditions.checkNotNull(
        instance.provideHttpClient(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
