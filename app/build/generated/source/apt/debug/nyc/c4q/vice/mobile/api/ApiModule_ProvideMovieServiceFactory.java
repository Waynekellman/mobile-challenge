// Generated by Dagger (https://google.github.io/dagger).
package nyc.c4q.vice.mobile.api;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class ApiModule_ProvideMovieServiceFactory implements Factory<MovieService> {
  private final ApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public ApiModule_ProvideMovieServiceFactory(
      ApiModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public MovieService get() {
    return provideInstance(module, retrofitProvider);
  }

  public static MovieService provideInstance(
      ApiModule module, Provider<Retrofit> retrofitProvider) {
    return proxyProvideMovieService(module, retrofitProvider.get());
  }

  public static ApiModule_ProvideMovieServiceFactory create(
      ApiModule module, Provider<Retrofit> retrofitProvider) {
    return new ApiModule_ProvideMovieServiceFactory(module, retrofitProvider);
  }

  public static MovieService proxyProvideMovieService(ApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideMovieService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
